# use rolling window version of costmap, as local costmap is not static
local_costmap:
  # local costmap will operate in the map frame, transform between this and robot-base frame must be available
  global_frame: map
  robot_base_frame: base_link
  rolling_window: true
  # local map will be publish at modrate frequency of 10
  publish_frequency: 10.0
  update_frequency: 10.0
  update_frequency: 10.0

  publish_voxel_map: false

  # width of the map in meters
  width: 5.0
  # height of the map in meters
  height: 5.0
  # resolution of the map in meters/cell
  resolution: 0.05

  #static_map: true

  

  origin_x: 0.0
  origin_y: 0.0
  
  # specifications for the footprint of the robot as polygon (in meters)

  footprint: [[0.50, 0.50], [0.50, -0.50], [-0.50, -0.50], [-0.50, 0.50] ]  


# for local plannign we will use only obstacles, inflation layers
plugins:
 -
    name: obstacles 
    type: "costmap_2d::ObstacleLayer"

 - 
    name: inflater
    type: "costmap_2d::InflationLayer"

 -
   name: social_compliance
   type: "social_compliance_layer::SocialComplianceLayer"   
